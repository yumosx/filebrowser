# --------- 1. 前端 ---------
FROM node:22-alpine AS frontend-builder
WORKDIR /src
# 安装 pnpm 9
RUN npm i -g pnpm@9
COPY frontend/package*.json ./
RUN pnpm install
COPY frontend ./
RUN pnpm run build

# --------- 2. Go 构建阶段 ---------
FROM golang:1.24-alpine AS go-builder
RUN apk add --no-cache build-base git
WORKDIR /src

# 依赖层缓存
COPY go.mod go.sum ./
RUN go mod tidy

# 拷后端源码
COPY . .

# 把前端产物塞进对应目录（filebrowser 嵌入 frontend/dist）
COPY --from=frontend-builder /src/dist ./frontend/dist

# 编译静态二进制
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
    go build -trimpath -ldflags="-s -w" -o /out/filebrowser ./

# --------- 3. 运行时（distroless） ---------
FROM gcr.io/distroless/static:nonroot
WORKDIR /app

COPY --from=go-builder /out/filebrowser /app/filebrowser

# 数据卷
VOLUME ["/data", "/srv"]
USER nonroot:nonroot
EXPOSE 80

ENTRYPOINT ["/app/filebrowser"]
CMD ["--address", "0.0.0.0", "--port", "80", "--root", "/srv", "--noauth"]